name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 whydpi/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings, max line length 100
        flake8 whydpi/ --count --exit-zero --max-line-length=100 --statistics

    - name: Analyze with pylint
      run: |
        pylint whydpi/ --exit-zero --max-line-length=100
      continue-on-error: true

  syntax-check:
    name: Python Syntax Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check Python syntax
      run: |
        python -m py_compile whydpi/*.py
        python -m py_compile setup.py

    - name: Install package (dry run)
      run: |
        python -m pip install --upgrade pip
        pip install --dry-run -e .

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security scan
      run: |
        bandit -r whydpi/ -f json -o bandit-report.json
        bandit -r whydpi/ --exit-zero
      continue-on-error: true

    - name: Check dependencies for known vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check --json --output safety-report.json || true
        safety check --continue-on-error
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 30

  license-check:
    name: License Header Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check SPDX license headers
      run: |
        echo "Checking for SPDX-License-Identifier in Python files..."
        missing_license=0
        for file in $(find whydpi -name "*.py"); do
          if ! grep -q "SPDX-License-Identifier: MIT" "$file"; then
            echo "❌ Missing license header: $file"
            missing_license=$((missing_license + 1))
          fi
        done

        if [ $missing_license -gt 0 ]; then
          echo "⚠️ Found $missing_license files without proper license headers"
          exit 1
        else
          echo "✅ All Python files have proper license headers"
        fi
